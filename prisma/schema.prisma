generator client {
  // provider = "cargo run --bin prisma"
  provider = "cargo run --bin prisma"
  output   = "../src/prisma_client/client.rs"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  email           String            @unique
  username        String            @unique
  ip              String
  token           String            @default(uuid())
  csrf_token      String            @default(uuid())
  createdAt       DateTime          @default(now())
  banned          Boolean           @default(false)
  updatedAt       DateTime          @updatedAt
  Messages        Messages[]
  UsersRooms      UsersRooms[]
  BannedUsersRoom BannedUsersRoom[]
  Invites         Invites[]
  Rooms           Rooms[]
}

// Many too many relationship between users and rooms
model UsersRooms {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  room      Rooms    @relation(fields: [roomId], references: [id])
  roomId    Int
  muted     Boolean  @default(false)
}

model BannedUsersRoom {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  room      Rooms    @relation(fields: [roomId], references: [id])
  roomId    Int
}

model Rooms {
  id              Int               @id @default(autoincrement())
  name            String
  capacity        Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  user_id         Int
  user            User              @relation(fields: [user_id], references: [id])
  Messages        Messages[]
  UsersRooms      UsersRooms[]
  BannedUsersRoom BannedUsersRoom[]
  Invites         Invites[]
}

model Invites {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  room      Rooms    @relation(fields: [roomId], references: [id])
  roomId    Int
}

model Messages {
  id        Int      @id @default(autoincrement())
  message   String   @db.VarChar(1000)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  room      Rooms    @relation(fields: [roomId], references: [id])
  roomId    Int

  @@index([userId], name: "userId")
  @@index([roomId], name: "roomId")
  @@index([createdAt], name: "createdAt")
}
